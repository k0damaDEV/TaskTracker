plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'application'
    id 'org.liquibase.gradle' version '2.1.0'
    id 'org.siouan.frontend-jdk11' version '6.0.0'
    id 'org.springdoc.openapi-gradle-plugin' version '1.3.3'
    id 'com.github.johnrengelman.processes' version '0.5.0'
}

application {
    mainClass = 'hexlet.code.app.AppApplication'
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "15"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.1.4.RELEASE'
    implementation 'org.liquibase:liquibase-core:4.6.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.12'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.querydsl:querydsl-core:5.0.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.24'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'com.github.database-rider:rider-junit5:1.32.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    annotationProcessor(
            'com.querydsl:querydsl-apt:5.0.0:jpa',
            'javax.annotation:javax.annotation-api:1.3.2',
            'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
    )

    runtimeOnly 'com.h2database:h2:1.4.200'

    liquibaseRuntime(
            sourceSets.main.output,
            'org.liquibase:liquibase-core:4.6.1',
            'org.liquibase.ext:liquibase-hibernate5:4.5.0',
            'org.springframework.boot:spring-boot-starter-data-jpa'
    )

    compileOnly 'org.projectlombok:lombok:1.18.20'
        annotationProcessor 'org.projectlombok:lombok:1.18.20'
        testCompileOnly 'org.projectlombok:lombok:1.18.20'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

diffChangeLog {
    dependsOn compileJava
}

liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
            url 'jdbc:h2:./taskTracker'
            username 'sa'
            password ''
            referenceUrl 'hibernate:spring:hexlet.code.app.model.' +
                    '?dialect=org.hibernate.dialect.H2Dialect' +
                    '&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
        }
    }
}

frontend {
    nodeVersion = '16.13.1'
    installScript = 'install'
    assembleScript = 'run build'
    packageJsonDirectory = file("${projectDir}/frontend")
}

def configFrontendTasks = {
    inputs.files(fileTree("$projectDir/frontend").exclude('build', 'node_modules'))
    outputs.dir("$buildDir/resources/main/static")
}

assembleFrontend {
    configure configFrontendTasks

    doLast {
        copy {
            from "$projectDir/frontend/build"
            into "$buildDir/resources/main/static"
        }
    }
}

installFrontend {
    configure configFrontendTasks
}

processResources.dependsOn assembleFrontend

task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean

targetCompatibility = JavaVersion.VERSION_15
